// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.5.0 hacker-room-new.glb -T 
// Files: hacker-room-new.glb [34.62MB] > /Users/hsuwinlat/Desktop/jsm pj/threejscc-portfolio/public/models/hacker-room-new-transformed.glb [2.56MB] (93%)
// */

// import { useGLTF, useTexture } from '@react-three/drei';

// export function HackerRoom(props) {
//   const { nodes, materials } = useGLTF('/models/hacker-room.glb');

//   const monitortxt = useTexture('textures/desk/monitor.png');
//   const screenTxt = useTexture('textures/desk/screen.png');

//   return (
//     <group {...props} dispose={null}>
//       <mesh geometry={nodes.screen_screens_0.geometry} material={materials.screens}>
//         <meshMatcapMaterial map={screenTxt} />
//       </mesh>
//       <mesh geometry={nodes.screen_glass_glass_0.geometry} material={materials.glass} />
//       <mesh geometry={nodes.table_table_mat_0_1.geometry} material={materials.table_mat} />
//       <mesh geometry={nodes.table_table_mat_0_2.geometry} material={materials.computer_mat}>
//         <meshMatcapMaterial map={monitortxt} />
//       </mesh>
//       <mesh geometry={nodes.table_table_mat_0_3.geometry} material={materials.server_mat} />
//       <mesh geometry={nodes.table_table_mat_0_4.geometry} material={materials.vhsPlayer_mat} />
//       <mesh geometry={nodes.table_table_mat_0_5.geometry} material={materials.stand_mat} />
//       <mesh geometry={nodes.table_table_mat_0_6.geometry} material={materials.mat_mat} />
//       <mesh geometry={nodes.table_table_mat_0_7.geometry} material={materials.arm_mat} />
//       <mesh geometry={nodes.table_table_mat_0_8.geometry} material={materials.tv_mat}>
//         <meshMatcapMaterial map={monitortxt} />
//       </mesh>
//       <mesh geometry={nodes.table_table_mat_0_9.geometry} material={materials.cables_mat} />
//       <mesh geometry={nodes.table_table_mat_0_10.geometry} material={materials.props_mat} />
//       <mesh geometry={nodes.table_table_mat_0_11.geometry} material={materials.ground_mat} />
//       <mesh geometry={nodes.table_table_mat_0_12.geometry} material={materials.key_mat} />
//     </group>
//   );
// }

// useGLTF.preload('/models/hacker-room.glb');


/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Sousinho (https://sketchfab.com/sousinho)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/scifi-terminal-2-b03bde63cb4a42d29aff418888a38297
Title: SciFi Terminal 2
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export  function HackerRoom(props) {
  const { nodes, materials } = useGLTF('/models/scifi_terminal_2.glb')
  console.log(nodes, materials)
  return (
    <group {...props}>  // No scaling here
    <mesh
      geometry={nodes.SM_WashingDevice_T_Terminal_0.geometry}
      material={materials.T_Terminal}
      position={[0, -1, -5]}  // Centered position
      scale={2}  // No scaling here
    />
  </group>
  )
}

useGLTF.preload('/scifi_terminal_2.glb')


